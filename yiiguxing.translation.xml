<application>
  <component name="AppStorage">
    <histories>
      <item value="all Entries" />
      <item value="特别的specail Folder Prefix" />
      <item value="贴别的specail Folder Prefix" />
      <item value="specail Folder Prefix" />
      <item value="Mysql Distributed Lock" />
      <item value="Interval" />
      <item value="conflict Processes" />
      <item value="* If a value is present, invoke the specified consumer with the value, * otherwise do nothing." />
      <item value="the total amount of items available. The total might be adapted considering the length of the content * given, if it is going to be the content of the last page. This is in place to mitigate inconsistencies" />
      <item value="不存在" />
      <item value="重复" />
      <item value="generated Stage" />
      <item value="get File For Last Modified Check" />
      <item value="get Component Type" />
      <item value="This implementation opens an InputStream for the given class path resource." />
      <item value="r - oh well, maybe the caller can live with null..." />
      <item value="or absolute within * the classpath via a leading slash." />
      <item value="relative" />
      <item value="保留分组" />
      <item value="get Template Process Groups" />
      <item value="presentation Template" />
      <item value="Spliterator" />
      <item value="Implementation class used by partitioningBy." />
      <item value="Partition" />
      <item value="min By" />
      <item value="supplier" />
      <item value="Represents" />
      <item value="Represents a supplier of results." />
      <item value="identity" />
      <item value="Returns a composed function that first applies the {@code before}" />
      <item value="compose" />
      <item value="the function result" />
      <item value="t the function argument" />
      <item value="Applies this function to the given argument." />
      <item value="Returns a predicate that represents the logical negation of this * predicate." />
      <item value="negate" />
      <item value="a predicate that will be logically-ANDed with this * predicate" />
      <item value="Evaluates this predicate on the given argument." />
      <item value="the type of the input to the predicate" />
      <item value="Represents a predicate (boolean-valued function) of one argument." />
      <item value="Functional Interface" />
      <item value="生成实际进度" />
      <item value="neighboring" />
      <item value="aggregate File Ext Attr" />
      <item value="file Entry Descendant Ids" />
      <item value="File Entry" />
      <item value="Recourse Type" />
      <item value="redundant" />
      <item value="check Business Type Equals" />
      <item value="业务类型" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="129" />
        <entry key="ENGLISH" value="130" />
        <entry key="POLISH" value="1" />
        <entry key="CORSICAN" value="10" />
        <entry key="CROATIAN" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
</application>