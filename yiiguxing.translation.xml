<application>
  <component name="AppStorage">
    <histories>
      <item value="Exceptions thrown by the action are relayed to the caller." />
      <item value="Actions are * performed" />
      <item value="in the order of" />
      <item value="Actions are * performed in the order of iteration, if that order is specified." />
      <item value="remaining" />
      <item value="Performs" />
      <item value="backing" />
      <item value="/ Use backing collection version" />
      <item value="&quot;I'm kind of busy,leave me alone,pls!&quot;" />
      <item value="Concrete Target" />
      <item value="appears" />
      <item value="indicating" />
      <item value="semantics" />
      <item value="type declarations and type * parameter declarations as a convenience for designers of type checkers which * give semantics to annotation types." />
      <item value="includes enum constants" />
      <item value="type * parameter declarations" />
      <item value="including annotation type" />
      <item value="Whether the provider has been exported" />
      <item value="if the method unexported is invoked, the value is true" />
      <item value="The flag whether a service has unexported ," />
      <item value="is Unexported" />
      <item value="no need to generate adaptive class since there's no adaptive method found." />
      <item value="is Assignable From" />
      <item value="return &quot;&quot;, if setter name with length less than 3" />
      <item value="for instance: setVersion, return &quot;version&quot;" />
      <item value="get properties name for setter," />
      <item value="Check {@link DisableInject} to see if we need auto injection for this property" />
      <item value="extract and cache default extension name if exists" />
      <item value="get Adaptive Extension" />
      <item value="with Extension Annotation" />
      <item value="The current lazy-lookup iterator" />
      <item value="The class or interface representing the service being loaded" />
      <item value="considerable" />
      <item value="Strategy " />
      <item value="disable Local Configure Authentication Bldr" />
      <item value="against" />
      <item value="Miscellaneous methods for calculating digests." />
      <item value="Message Digest" />
      <item value="algorithm" />
      <item value="flatMap} does not wrap it with an additional * {@code Optional}." />
      <item value="but the provided mapper is one whose result is already an {@code Optional}, * and if invoked," />
      <item value="similar" />
      <item value="return that result," />
      <item value="apply the provided {@code Optional}-bearing * mapping function to it," />
      <item value=" flat" />
      <item value="If a value is present," />
      <item value="compose" />
      <item value="表现形式" />
      <item value="形式" />
      <item value="Supplier" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="993" />
        <entry key="ENGLISH" value="994" />
        <entry key="ESTONIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="13" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="2" />
        <entry key="CZECH" value="3" />
        <entry key="CORSICAN" value="10" />
        <entry key="CROATIAN" value="2" />
        <entry key="LATIN" value="3" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
</application>